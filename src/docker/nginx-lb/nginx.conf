worker_processes 3;
 
events { worker_connections 1024; }
 
http {
    sendfile on;

    upstream frontend_servers {
        server frontend1:9000;
        server frontend2:9000;
        server frontend3:9000;
    }
 
    upstream backend_servers {
        server backend1:8080;
        server backend2:8080;
        server backend3:8080;
    }

        server {
                listen 80 default_server;
                listen [::]:80 default_server;
                server_name ec2-34-208-181-79.us-west-2.compute.amazonaws.com www.ec2-34-208-181-79.us-west-2.compute.amazonaws.com
                return 301 https://$server_name$request_uri;
        }

    server {
        listen 443 ssl;
        server_name ec2-34-208-181-79.us-west-2.compute.amazonaws.com www.ec2-34-208-181-79.us-west-2.compute.amazonaws.com

        ssl on;
        ssl_certificate /etc/ssl/cert/eres3.crt;
        ssl_certificate_key /etc/ssl/cert/eres3.key;

        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains" always;
 
        location / {
            proxy_pass         http://frontend_servers;
        }

        location /app {
            rewrite ^/app(.*) /$1 break;
            proxy_pass         http://backend_servers;
        }

        location /dockeradmin {
            rewrite ^/dockeradmin(.*) /$1 break;
            proxy_pass         http://localhost:8443;
        }
    }
}
